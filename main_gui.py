import tkinter as tk
from tkinter import filedialog, messagebox, scrolledtext
from PIL import Image, ImageTk
import threading
import sys
import os
from excel_processor_dynamic import process_excel_with_dynamic_fetch

class RedirectText:
    def __init__(self, text_widget):
        self.output = text_widget

    def write(self, string):
        self.output.insert(tk.END, string)
        self.output.see(tk.END)

    def flush(self):
        pass

def process_file_in_thread(file_path, output_path, button):
    try:
        process_excel_with_dynamic_fetch(file_path, output_path)
        messagebox.showinfo("–ì–æ—Ç–æ–≤–æ", f"–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ.\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {output_path}")
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:\n{e}")
    finally:
        button.config(state=tk.NORMAL)

def select_file(button):
    file_path = filedialog.askopenfilename(
        title="–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª",
        filetypes=[("Excel Files", "*.xlsx")]
    )
    if file_path:
        # Ask user for confirmation before overwriting
        confirm = messagebox.askyesno(
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª?\n{file_path}"
        )
        if not confirm:
            return

        output_path = file_path  # Overwrite the same file
        button.config(state=tk.DISABLED)

        thread = threading.Thread(target=process_file_in_thread, args=(file_path, output_path, button))
        thread.start()
def main():
    root = tk.Tk()
    root.title("Excel –û–±—Ä–∞–±–æ—Ç—á–∏–∫")
    root.geometry("640x500")
    root.configure(bg="#f4f4f4")

    # ======== Logo ========
    try:
        logo_img = Image.open("nitec.png")  # Use your company logo file here
        logo_img = logo_img.resize((200, 120), Image.Resampling.BILINEAR)
        logo = ImageTk.PhotoImage(logo_img)
        logo_label = tk.Label(root, image=logo, bg="#f4f4f4")
        logo_label.image = logo
        logo_label.pack(pady=10)
    except Exception as e:
        print("–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω:", e)

    # ======== Header ========
    label = tk.Label(root, text="Nitec Monitoring", font=("Arial", 14, "bold"), bg="#f4f4f4")
    label.pack(pady=10)

    # ======== Button ========
    process_button = tk.Button(root, text="üìÇ –í—ã–±—Ä–∞—Ç—å Excel —Ñ–∞–π–ª", font=("Arial", 12), bg="#4CAF50", fg="white", padx=10, pady=5)
    process_button.config(command=lambda: select_file(process_button))
    process_button.pack(pady=5)

    # ======== Log Output ========
    log_box = scrolledtext.ScrolledText(root, height=15, width=80, font=("Courier New", 10))
    log_box.pack(pady=10, padx=10)

    # ======== Redirect Output ========
    sys.stdout = sys.stderr = RedirectText(log_box)

    root.mainloop()

if __name__ == "__main__":
    main()
